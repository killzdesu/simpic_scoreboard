{"dependencies":[{"name":"./codes.json","loc":{"line":15,"column":20}}],"generated":{"js":"/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","map":{"mappings":[{"source":"node_modules\\statuses\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\statuses\\index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}}],"sources":{"node_modules\\statuses\\index.js":"/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n"},"lineCount":111}},"hash":"c41405f4e04e15242097a5836d0587e6","cacheData":{"env":{}}}