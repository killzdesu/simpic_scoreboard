{"dependencies":[],"generated":{"js":"/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * Regular expression to split on commas, trimming spaces\n * @private\n */\n\nvar ARRAY_SPLIT_REGEXP = / *, */\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  return header.trim().split(ARRAY_SPLIT_REGEXP)\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","map":{"mappings":[{"source":"node_modules\\vary\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\vary\\index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}}],"sources":{"node_modules\\vary\\index.js":"/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * Regular expression to split on commas, trimming spaces\n * @private\n */\n\nvar ARRAY_SPLIT_REGEXP = / *, */\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  return header.trim().split(ARRAY_SPLIT_REGEXP)\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n"},"lineCount":132}},"hash":"70e938bffe452e2a67712450e86ade43","cacheData":{"env":{}}}