{"dependencies":[{"name":"negotiator","loc":{"line":15,"column":25}},{"name":"mime-types","loc":{"line":16,"column":19}}],"generated":{"js":"/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts(req) {\n  if (!(this instanceof Accepts))\n    return new Accepts(req)\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  if (!this.headers.accept) return types[0];\n  var mimes = types.map(extToMime);\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));\n  var first = accepts[0];\n  if (!first) return false;\n  return types[mimes.indexOf(first)];\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime(type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime(type) {\n  return typeof type === 'string';\n}\n","map":{"mappings":[{"source":"node_modules\\accepts\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\accepts\\index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}}],"sources":{"node_modules\\accepts\\index.js":"/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts(req) {\n  if (!(this instanceof Accepts))\n    return new Accepts(req)\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  if (!this.headers.accept) return types[0];\n  var mimes = types.map(extToMime);\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));\n  var first = accepts[0];\n  if (!first) return false;\n  return types[mimes.indexOf(first)];\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime(type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime(type) {\n  return typeof type === 'string';\n}\n"},"lineCount":232}},"hash":"6463edd7ca4722a945233fd42b789f65","cacheData":{"env":{}}}