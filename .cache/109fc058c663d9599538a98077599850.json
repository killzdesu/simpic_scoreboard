{"dependencies":[],"generated":{"js":"/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","map":{"mappings":[{"source":"node_modules\\media-typer\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules\\media-typer\\index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}}],"sources":{"node_modules\\media-typer\\index.js":"/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n"},"lineCount":271}},"hash":"dc14c722cf9932e3922b24b211d6c11c","cacheData":{"env":{}}}